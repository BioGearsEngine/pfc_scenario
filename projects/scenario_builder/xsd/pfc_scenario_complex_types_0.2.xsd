<?xml version="1.0" encoding="UTF-8"?>
<?purpose description="This schema defines MSDL extensions for PFC Training" ?>
<?version number="0.2" date="2020-01-28"?>
<?copyright statement="Copyright (c) 2019 by the Applied Resaearch Associates, Inc.
4300 San Mateo Blvd. NE, Suite A-220
Albuquerque, NM 87110
All rights reserved.
ARA Licenses use of this material under the Apache 2.0 LICENSE"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="com:ara:pfc:training:1" version="0.2" 
  xmlns="com:ara:pfc:training:1" 
  xmlns:pfc="com:ara:pfc:training:1" 
  xmlns:msdl="urn:sisostds:scenario:military:data:draft:msdl:1" 
  xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning">
  <xs:import namespace="urn:sisostds:scenario:military:data:draft:msdl:1" schemaLocation="military_scenario_1.0.0.xsd"/>
  <xs:complexType name="summary">
    <xs:annotation>
      <xs:documentation>General Information About the Scenario.</xs:documentation>
    </xs:annotation>
    <xs:all>
      <xs:element name="title" type="xs:string" minOccurs="0"/>
      <xs:element name="description" type="xs:string" minOccurs="0"/>
      <xs:element name="version" type="xs:string" minOccurs="0"/>
      <xs:element name="classification" type="xs:string" minOccurs="0"/>
      <xs:element name="keywords" type="xs:string" minOccurs="0"/>
      <xs:element name="domain" type="xs:string" minOccurs="0"/>
      <xs:element name="limitations" type="xs:string" minOccurs="0"/>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="author">
    <xs:annotation>
      <xs:documentation>Important data regarding a scenario's creator.</xs:documentation>
    </xs:annotation>
    <xs:all>
      <xs:element name="first_name" type="xs:string" minOccurs="0"/>
      <xs:element name="last_name" type="xs:string" minOccurs="0"/>
      <xs:element name="organization" type="xs:string" minOccurs="0"/>
      <xs:element name="phone_number" type="xs:string" minOccurs="0"/>
      <xs:element name="email" type="xs:string" minOccurs="0"/>
      <xs:element name="zip" type="xs:string" minOccurs="0"/>
      <xs:element name="state" type="xs:string" minOccurs="0"/>
      <xs:element name="country" type="xs:string" minOccurs="0"/>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="equipment-definition-list">
    <xs:annotation>
      <xs:documentation>List of pfc:equipment types.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="equipment" type="equipment" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="equipment">
    <xs:annotation>
      <xs:documentation>
        A PFC representation any equipment or inventory that might be used in the scenario. This could be a medical device or a
        any common item which is of significance to the scenario narrative.
      </xs:documentation>
    </xs:annotation>
    <xs:all>
      <xs:element name="id" type="xs:string"/>
      <xs:element name="name" type="xs:string" minOccurs="1"/>
      <xs:element name="type" type="xs:integer" minOccurs="0"/>
      <xs:element name="description" type="xs:string" minOccurs="1"/>
      <xs:element name="citations" type="citation-ref-list" minOccurs="1"/>
      <xs:element name="image" type="xs:string" minOccurs="0"/>
      <xs:element name="properties" type="properties-list" minOccurs="1"/>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="trauma-definition-list">
    <xs:annotation>
      <xs:documentation>List of pfc:trauma types.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="trauma" type="trauma" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="trauma">
    <xs:annotation>
      <xs:documentation>
				A PFC representation of a simple trauma. Injuries are associated to a Injury-Profile where severity and trauma-site are applied.
				An trauma must have a medical-name, but can also have a common-name for use in documentation. It is good to provide a list of citations 
				which describe the trauma in more traditional terms in the references section, but is not required.
      </xs:documentation>
    </xs:annotation>
    <xs:all>
      <xs:element name="id" type="xs:string"/>
      <xs:element name="common-name" type="xs:string" minOccurs="0"/>
      <xs:element name="medical-name" type="xs:string" minOccurs="1"/>
      <xs:element name="citations" type="citation-ref-list" minOccurs="1"/>
      <xs:element name="description" type="xs:string" minOccurs="1"/>
      <xs:element name="severity-range" type="trauma-severity-range" minOccurs="1"/>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="trauma-severity-range">
    <xs:annotation>
      <xs:documentation>
				Every trauma has a severity range which can either be presented as a numeric-range or a token range. 
				Token ranges are a list of enums that describe the trauma, some are provided in the base XSD.  numeric-ranges are either
				a scalar value or a unit-scalar which include a min and max value that represent some measure of scale.
      </xs:documentation>
    </xs:annotation>
    <xs:choice>
      <xs:element name="numeric-range" type="numeric-range"/>
      <xs:element name="token-range" type="token-range"/>
    </xs:choice>
  </xs:complexType>
  <xs:complexType name="numeric-range">
    <xs:annotation>
      <xs:documentation>
				Numerical range of two doubles with an optional median value and unit type. The trauma definition mostly uses this for documentation.
				Scenario UIs may try to use it for visualization of trauma sets, but that is implementation defined. A physiology engine might use
				severity to set its own internal insults/injuries where valid values may be [0.0,1.0], [0.0, .5 l/s]
      </xs:documentation>
    </xs:annotation>
    <xs:all>
      <xs:element name="min" type="xs:double" minOccurs="1"/>
      <xs:element name="max" type="xs:double" minOccurs="1"/>
      <xs:element name="median" type="xs:double" minOccurs="0"/>
      <xs:element name="unit" type="xs:string" minOccurs="0"/>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="token-range">
    <xs:annotation>
      <xs:documentation>
				Some ranges are better described with english words [low,medium,high] token-range allows a trauma definition to specificy a 
				custom enummeration that a UI would then convert to a valid dropdown list when constructing a UI. trauma-profiles can not
				validate against the trauma definition with out restricting the possible ranges so this is really for internal documentation.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="token" type="xs:NCName" minOccurs="2" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="citation-ref-list">
    <xs:annotation>
      <xs:documentation>List of strings which should be citations for source material. This could be expanded to be a more strengent 
				field combination, but lets see what happens
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="citation-ref" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="treatment-plan-definition-list">
    <xs:annotation>
      <xs:documentation>List of pfc:treatment-plan types.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="treatment-plan" type="treatment-plan" minOccurs="1" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="treatment-plan">
    <xs:annotation>
      <xs:documentation>
				A Treatment Plan is intended to be a break down of a clinical practice guideline in to a series of descrete steps. The simplicty of 
				the treatment plan breakdown is matched to the intended training for the scenario and not the true complexity of the full CPG.
				Future versions may allow logcial branching but currently the representation is a linear flow of steps.
      </xs:documentation>
    </xs:annotation>
    <xs:all>
      <xs:element name="id" type="xs:string"/>
      <xs:element name="common-name" type="xs:string" minOccurs="0"/>
      <xs:element name="medical-name" type="xs:string" minOccurs="0"/>
      <xs:element name="description" type="xs:string" minOccurs="1"/>
      <xs:element name="required-equipment" type="equipment-ref-list" minOccurs="1"/>
      <xs:element name="references" type="medical-reference-list" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="equipment-ref-list">
    <xs:annotation>
      <xs:documentation>
				List of UUIDs from the equipment list in the FORCE_SIDE section of an associated MSDL file
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="equipment-refs" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="medical-reference-list">
    <xs:annotation>
      <xs:documentation>
				Series of citations that the treatment plan was built on.  
				Allows the user to refer to more detailed material beyond the simplified
				training plan.
      </xs:documentation>
    </xs:annotation>
    <xs:all>
      <xs:element name="citations" type="citation-ref-list"/>
      <xs:element name="cpgs" type="cpg-ref-list"/>
      <!-- <xs:element name="related-learning-objectives" type="learning-objective-reference-list" /> -->
    </xs:all>
  </xs:complexType>
  <xs:complexType name="cpg-ref-list">
    <xs:annotation>
      <xs:documentation>
        List of CPG specific citations. This tag is differentatated from the citations tag in order to make it easier for user interfaces
        to parse out all associated CPGs and make mapping widgets.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="cpg-ref" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="cpg-list">
    <xs:annotation>
      <xs:documentation>
        List of CPG specific citations. This tag is differentatated from the citations tag in order to make it easier for user interfaces
        to parse out all associated CPGs and make mapping widgets.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="cpg" type="cpg" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="cpg">
    <xs:annotation>
      <xs:documentation>
				Clinical Practice Guideline
      </xs:documentation>
    </xs:annotation>
    <xs:all>
      <xs:element name="name" type="xs:string"/>
      <xs:element name="description" type="xs:string"/>
      <xs:element name="citation-ref" type="xs:string"/>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="learning-objective-reference-list">
    <xs:annotation>
      <xs:documentation>
				List of UUIDs from the lessons list in the learning-objective-list in a pfc:syllabus
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="objective" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="treatment-plan-ref-list">
    <xs:annotation>
      <xs:documentation>
				List of UUIDs from the treatment-plans in the treatment-definition-list
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="treatment-plan" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="trauma-profile-list">
    <xs:annotation>
      <xs:documentation>
				List of pfc:trauma-profiles.  
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="trauma-profile" type="trauma-profile" minOccurs="1" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="trauma-profile">
    <xs:annotation>
      <xs:documentation>
				A collection of Injuries which is intended to act as a boot strap medical record for an acor in a medical-scenario.
				Injury profiles can be appended either to an actor initially or mid scenario to act like a contracted wound. Injury in this 
				case may include medical conditions or diagnosis, but will generally be a combat casualty wound. 
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="id" type="xs:string" minOccurs="1"/>
      <xs:element name="name" type="xs:string" minOccurs="1"/>
      <xs:element name="physiology-state" type="xs:string" minOccurs="0"/>
      <xs:element name="injuries" type="trauma-occurence-list" minOccurs="1"/>
      <xs:element name="treatments" type="treatment-plan-ref-list"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="trauma-profile-ref-list">
    <xs:annotation>
      <xs:documentation>
				List of UUIDs from the trauma-profiles in the profile list
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="trauma-profile" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="trauma-occurence-list">
    <xs:annotation>
      <xs:documentation>
				List of pfc:trauma-occurence
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="trauma" type="trauma-occurence" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="trauma-occurence">
    <xs:annotation>
      <xs:documentation>
        Injury occurence is an Injury-Reference with a few additional fields to help associate the trauma with a specific
        location in the body that it occured and a severity of the condition.  The severity is an abstract term which should be
        annotated in the trauma description. It could be the flow rate for a hemorrhage or a general term like mild,severe for an infection
        Even first,second,third for a burn trauma. It is left to the implementation to interprete the meaning of the severity. Severity values are 
        mapped to a severity definition by the implementation as xml validation alone can not enforce these rules.
      </xs:documentation>
    </xs:annotation>
    <xs:all>
      <xs:element name="id" type="xs:string" minOccurs="1"/>
      <xs:element name="location" type="xs:string" minOccurs="1"/>
      <xs:element name="description" type="xs:string" minOccurs="1"/>
      <xs:element name="severity" type="xs:string" minOccurs="1"/>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="medical-scenario-syllabus">
    <xs:sequence>
      <xs:element name="learning-objectives" type="learning-objective-list" />
      <xs:element name="learning-assessments" type="assessment-list" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="learning-objective-list">
    <xs:sequence>
      <xs:element name="objective" type="learning-objective" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="learning-objective">
    <xs:all>
      <xs:element name="id" type="xs:string"/>
      <xs:element name="name" type="xs:string"/>
      <xs:element name="description" type="xs:string"/>
      <xs:element name="references" type="medical-reference-list"/>
      <xs:element name="relates-to">
        <xs:complexType>
          <xs:all>
            <xs:element name="treatment-plans" type="treatment-plan-ref-list"/>
            <xs:element name="trauma-profiles" type="trauma-profile-ref-list"/>
          </xs:all>
        </xs:complexType>
      </xs:element>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="assessment-list">
    <xs:annotation>
      <xs:documentation>
				List of pfc:assessment with a required total-points field which should equal the sum of all points-avaliable in the assessment fields.  Used as a sanity check by implementations.
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="total-points" default="0" type="xs:integer" minOccurs="1" maxOccurs="1"/>
      <xs:element name="assessment" type="assessment" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="assessment">
    <xs:annotation>
      <xs:documentation>
				An assessment consist of an id and a idref to a lesson-objective.  This type is a work in practice and the criteria element is likely be reworked beyond a string in a future revision
      </xs:documentation>
    </xs:annotation>
    <xs:all>
      <xs:element name="id" type="xs:string"/>
      <xs:element name="objective-id" type="xs:string"/>
      <xs:element name="name" type="xs:string"/>
      <xs:element name="description" type="xs:string"/>
      <xs:element name="points-avaiable" type="xs:integer"/>
      <!--IF PARTIAL THEN HOW MANY TOTAL POINTS AVALIABLE-->
      <xs:element name="criteria" type="xs:string"/>
      <!--PASS/FAIL OR PARTIAL-->
    </xs:all>
  </xs:complexType>
  <xs:complexType name="medical-scenario">
    <xs:annotation>
      <xs:documentation>
				A PFC medical scenario is an exetension of the MSDL.  The purpose of this extension is to better document micro level sequence of events which are to
        complex to be described in the original MSDL definition.

				The best metephor for this extension is a stageplay script which requires a list of cast members, contains a description of the scenary and props 
        to be used with int the narrative along with a timeline of events.

				This metephor maps to the list of requirments needed to accurately simulate a medical training scenario to provide the immersion needed
				to properly elevate the training and make learning transfer possible. The breakdown can be as simple or complex as is needed for a narrative to be completed. 
        Various elements also have a fidelity field which is designed to allow additinal information to be encoded int he scenario that is ignored by lower fidelity
        implementations.
      </xs:documentation>
    </xs:annotation>
    <xs:all>
      <xs:element name="id" type="xs:string"/>
      <xs:element name="roles" type="role-list"/>
      <xs:element name="training-script" type="scene-list"/>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="role-list">
    <xs:annotation>
      <xs:documentation>List of pfc:roles</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="role" type="role" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="role">
    <xs:annotation>
      <xs:documentation>
				A role is a refernce to a pfc:role with an optional pfc:trauma-profile reference.
				An additional description describes the role of the unit in human terms on the level of a cliff-note.
				The short-name is a unique string to be use when parsing a training-script event to quickly refer to 
				a role
      </xs:documentation>
    </xs:annotation>
    <xs:all>
      <xs:element name="id" type="xs:string"/>
      <xs:element name="name" type="xs:string"/>
      <xs:element name="short-name" type="xs:string"/>
      <xs:element name="trauma-profile-ref" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <xs:element name="description" type="xs:string"/>
    </xs:all>
  </xs:complexType>
  <xs:complexType name ="role-ref-list">
    <xs:sequence>
      <xs:element name="role-ref" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="item-list">
    <xs:annotation><xs:documentation>List of pfc:item  Which is a specific pfc:equipment item with its property values populatd
      </xs:documentation></xs:annotation>
    <xs:sequence>
      <xs:element name="item" type="item" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="item">
    <xs:annotation>
      <xs:documentation>
				A prop is a refernce to a pfc:equipment
				An additional description describes the purpose of the prop in the training simulation in human terms on the level of a cliff-note
				The short-name is a unique string to be use when parsing a training-script event to quickly refer to 
				a prop
      </xs:documentation>
    </xs:annotation>
    <xs:all>
      <xs:element name="short-name" type="xs:string"/>
      <xs:element name="equipment-id" type="xs:string"/>
      <xs:element name="description" type="xs:string"/>
      <xs:element name="properties" type="property-value-list"/>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="scene-list">
    <xs:annotation><xs:documentation>List of pfc:scene(s)</xs:documentation></xs:annotation>
    <xs:sequence>
      <xs:element name="scene" type="scene" minOccurs="1" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="scene">
    <xs:annotation>
      <xs:documentation>
				A scene is a reference msdl:installation with its own independent metorlgoical data and time of day.
				Each scene also has a time-in-simulation which represents the number of minutes since the start of the simulation this is used to sort scenes for complex trianing scenarios
				An additional description field allows a human readable synopsis to be added. It is likely most
				training scenaros will be a single scene, but the format supports multiple scenes for mass casulaty events when training groups
				with the hope of allowing teams to train communication of information learned indpedent of each other and practice medical handoff technquies.
      </xs:documentation>
    </xs:annotation>
    <xs:all>
      <xs:element name="location-id" type="xs:string"/>
      <xs:element name="name" type="xs:string"/>
      <xs:element name="description" type="xs:string"/>
      <xs:element name="time-of-day" type="xs:time"/>
      <xs:element name="time-in-simulation" type="xs:integer"/>
      <!-- <xs:element name="weather" type="msdl:EnvironmentType" minOccurs="0"/> -->
      <xs:element name="events" type="event-list"/>
      <xs:element name="items" type="item-list"/>
      <xs:element name="roles" type="role-ref-list"/>
    </xs:all>
  </xs:complexType>
  <xs:complexType name="event-list">
    <xs:annotation>
      <xs:documentation>
				List of pfc:event(s)
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="event" type="event" minOccurs="1" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="event">
    <xs:annotation>
      <xs:documentation>
				An event is a pfc:event-category-enum a pfc:event-fidelity-enum 
				and a set of details. 
				An additional description describes the purpose of the prop in the training simulation in human terms on the level of a cliff-note.
				At this time details is a string field a future update to this spec will define a event-detail-tye which will be a choice of the following
					event-action-details
					event-dialog-details
					event-movment-details
					event-acoustic-details
					event-environment-details
					event-script-details                         <!--Complex max fidelity code scripting to be loaded by level creators -->
				Each one with its own set of fields to be mainpulated
      </xs:documentation>
    </xs:annotation>
    <xs:all>
      <xs:element name="id" type="xs:string"/>
      <xs:element name="name" type="xs:string"/>
      <xs:element name="category" type="event-category-enum"/>
      <xs:element name="fidelity" type="event-fidelity-enum"/>
      <xs:element name="actor_1" type="xs:string"/>
      <xs:element name="actor_2" type="xs:string"/>
      <xs:element name="equipment" type="xs:string"/>
      <xs:element name="details" type="xs:string"/>
      <xs:element name="description" type="xs:string"/>
    </xs:all>
  </xs:complexType>
  <xs:simpleType name="event-category-enum">
    <xs:annotation>
      <xs:documentation>Enumerated choice of an pfc:event category each of which describes one type of action that can occur in this event</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="ACTION">
        <xs:annotation>
          <xs:documentation>An Action is the result of a Role acting upon a peice of equipment or another Role. Can be detailed at all fidelity levels</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="DIALOG">
        <xs:annotation>
          <xs:documentation>Dialog is anytime a Role or Object performs audiable dialog in the scene. Typically for Medium or Higher fidelity.</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="MOVMENT">
        <xs:annotation>
          <xs:documentation>Any time a Role or Object changes location in the scene .</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="SOUND">
        <xs:annotation>
          <xs:documentation>Background or ambient sound affects typically at a high fidelity level as most low and medium fedeity implementations do not have sound systems.</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="ENVIRONMENT">
        <xs:annotation>
          <xs:documentation>Typically used to describe changes in set design or weather events almost always reserved for high fidelity simulations.</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="event-fidelity-enum">
    <xs:annotation>
      <xs:documentation>Enumerated choice of an pfc:event fidelity is intended to be used as a guide by implementations on if the details of this event an be skipped over. Additional fidelity levels may be include in the future</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="LOW">
        <xs:annotation>
          <xs:documentation>Low fidelity implementations are intende for traditional medical simulators which use live actors are need only to know the high level details like initial injuries and placment of equipment in the scene.</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="MEDIUM">
        <xs:annotation>
          <xs:documentation>Medium fidelity implementations are higher level simulations which include some scripted dialog and movment. The details included at this  level  give non trainies instructions on how to act when not interacting directly with the trainee</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="HIGH">
        <xs:annotation>
          <xs:documentation>High fidelity simulations are typically fully virtual simulations which must create atmosphereic ad background effects to enhance emerssian We are truly in the weeds at this level of scripting.</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="citation-list">
    <xs:annotation>
      <xs:documentation>List of Citation Information that a citation-ref-list refers to
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="citation" type="citation" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="citation">
    <xs:annotation>
      <xs:documentation>General Citation Information for a bib reference
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="uuid" type="xs:string" minOccurs="1" maxOccurs="1"/>
      <xs:element name="key" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <xs:element name="authors" type="xs:string" minOccurs="1" maxOccurs="unbounded"/>
      <xs:element name="title" type="xs:string" minOccurs="1" maxOccurs="1"/>
      <xs:element name="date" type="xs:string" minOccurs="1" maxOccurs="1"/>
      <xs:element name="page" type="xs:string" minOccurs="0" maxOccurs="1"/>
      <xs:element name="accessed" type="xs:string" minOccurs="0" maxOccurs="1"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="properties-list">
    <xs:annotation>
      <xs:documentation>List of Citation Information that a citation-ref-list refers to
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="property" type="property" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="property">
    <xs:annotation>
      <xs:documentation>A property is a configurable value of a peice of equipment. Each equipment can have any number of properties
                        The specific values of each property will be set when it is assigned to medical-scenario as a prop in a specific scene
      </xs:documentation>
    </xs:annotation>
    <xs:all>
      <xs:element name="name" type="xs:string" />
      <xs:element name="type" type="xs:string" />
    </xs:all>
  </xs:complexType>
  <xs:complexType name="property-value-list">
    <xs:annotation>
      <xs:documentation>List of propety-values
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="value" type="property-value" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="property-value">
    <xs:annotation>
      <xs:documentation>The value for a property. They are broken in to two types because properties are generally defined in definition types while values appear in instance types;
      </xs:documentation>
    </xs:annotation>
    <xs:all>
      <xs:element name="name" type="xs:string"/>
      <xs:element name="value" type="xs:string"/>
    </xs:all>
  </xs:complexType>
</xs:schema>
